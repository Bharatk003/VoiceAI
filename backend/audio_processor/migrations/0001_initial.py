# Generated by Django 5.2.4 on 2025-07-19 13:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text="A user-friendly title for the session (e.g., 'Physics Lecture - Chapter 5').", max_length=255)),
                ('original_file_name', models.CharField(blank=True, help_text='The original name of the uploaded file.', max_length=255, null=True)),
                ('file_path', models.FileField(blank=True, help_text='Path to the original audio/video file.', null=True, upload_to='user_uploads/')),
                ('file_type', models.CharField(choices=[('AUDIO', 'Audio File'), ('VIDEO', 'Video File'), ('LIVE', 'Live Recording')], default='AUDIO', help_text='The type of media uploaded/recorded.', max_length=10)),
                ('duration_seconds', models.FloatField(blank=True, help_text='Duration of the audio/video in seconds.', null=True)),
                ('upload_timestamp', models.DateTimeField(auto_now_add=True, help_text='When the session was initiated/file was uploaded.')),
                ('processing_mode', models.CharField(choices=[('LECTURE', 'Lecture Mode'), ('MEETING', 'Meeting Mode'), ('MEDICAL', 'Medical Notes Mode'), ('INTERVIEW', 'Interview Mode'), ('JOURNAL', 'Thought Journal Mode'), ('PARENTING', 'Parenting Mode')], default='LECTURE', help_text='The mode selected for processing this session.', max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Processing'), ('UPLOADED', 'File Uploaded (Initial)'), ('TRANSCRIBING', 'Transcribing Audio'), ('TRANSCRIBED', 'Transcription Completed'), ('ANALYZING', 'Analyzing with LLM'), ('COMPLETED', 'Analysis Completed'), ('FAILED', 'Processing Failed')], default='PENDING', help_text='Current processing status of the session.', max_length=20)),
                ('user', models.ForeignKey(help_text='The user who initiated this session.', on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
                'ordering': ['-upload_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AnalysisResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transcription_text', models.TextField(blank=True, help_text='The full transcribed text from the audio/video.')),
                ('summary_text', models.TextField(blank=True, help_text='The LLM-generated summary of the session.')),
                ('notes_text', models.TextField(blank=True, help_text='Detailed notes generated by the LLM (e.g., key points, structured data).')),
                ('suggestions_resources_text', models.TextField(blank=True, help_text='Suggestions and external resources for detailed study.')),
                ('processed_timestamp', models.DateTimeField(auto_now_add=True, help_text='When the analysis was completed.')),
                ('llm_model_used', models.CharField(blank=True, help_text="Name of the LLM model used for analysis (e.g., 'llama-2-7b-chat').", max_length=100, null=True)),
                ('prompt_template_version', models.CharField(blank=True, help_text="Version of the prompt template used for the LLM (e.g., 'lecture_v1.0').", max_length=50, null=True)),
                ('session', models.OneToOneField(help_text='The session this analysis belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='analysis_result', to='audio_processor.session')),
            ],
            options={
                'verbose_name': 'Analysis Result',
                'verbose_name_plural': 'Analysis Results',
            },
        ),
    ]
